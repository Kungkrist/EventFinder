{"version":3,"file":"my-comment.component.js","sourceRoot":"","sources":["../../src/app/my-comment/my-comment.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, Inject, ReflectiveInjector} from '@angular/core';\nimport {Comment} from '../IComment';\nimport {AngularFire, FirebaseListObservable, FirebaseObjectObservable, FirebaseRef} from 'angularfire2';\nimport {Http} from '@angular/http';\nimport {MyReverseArray} from '../my-reverse-array.pipe'\nimport { DateHandlerService} from '../date-handler.service'\n\n@Component({\n  moduleId: module.id,\n  selector: 'my-comment',\n  templateUrl: 'my-comment.component.html',\n  styleUrls: ['my-comment.component.css'],\n  providers: [DateHandlerService],\n  pipes: [MyReverseArray]\n})\nexport class MyCommentComponent implements OnInit {\n  @Input()uid \n  comments: Comment[]\n  commentText =  \"\"\n  constructor(private dateHandlerService: DateHandlerService, @Inject(FirebaseRef) public ref:any, public injector: ReflectiveInjector) {}\n  \n  ngOnInit() {\n  //  this._mcs.getComments().(r => this.comments = r);\n    this.ref.child('/events').child('/'+this.uid).child('/comments').on(\"value\", (v) => this.comments = v.val());\n  }\n  \n  commentsCount() {\n    if (this.comments != null || this.comments != undefined) {\n      return this.comments.length;\n    }\n    this.comments = [];\n    return 0;\n  }\n  \n  postComment() {\n    var text = this.commentText;\n    var date = this.dateHandlerService.getDate();\n    var time = this.dateHandlerService.getTime();\n    var comment : Comment = {\n        username: \"Anonym\",\n        time: time,\n        date: date,\n        text: text\n      };\n    if (this.isInputValid(text)) {\n      if(this.ref.getAuth()) {    \n        // Get the username of the logged in user.\n        this.ref.child('/users/' + this.ref.getAuth().uid).once('value', user => {\n          comment.username = user.val().username;\n          this.ref.child('/events').child('/'+this.uid).child('/comments/'+this.comments.length).update(comment);\n          this.commentText = \"\";\n          return false;\n        });\n      }\n      else {\n        if (text === '') {\n          console.log(\"String is empty\");\n          return false;\n        }\n        if (/^ +$/.test(text) === true) {\n          console.log(\"Whitespaces in text\");\n          return false;\n        }\n        this.ref.child('/events').child('/'+this.uid).child('/comments/'+this.comments.length).update(comment);\n        this.commentText = \"\";\n        return false;\n      }\n    }\n  }\n  //Returns true if text in commentfield is valid.\n  isInputValid(text: string) {\n      if (text === '') {\n        console.log(\"String is empty\");\n        return false;\n      }\n      if (/^ +$/.test(text) === true) {\n        console.log(\"Whitespaces in text\");\n        return false;\n      } \n      return true;\n  }\n}\n"]}