{"version":3,"file":"my-comment.component.js","sourceRoot":"","sources":["my-comment.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, Input, Inject, Injector} from 'angular2/core';\nimport {Comment} from '../IComment';\nimport {AngularFire, FirebaseListObservable, FirebaseObjectObservable, FirebaseRef} from 'angularfire2';\nimport {Http} from 'angular2/http';\nimport {MyReverseArray} from '../my-reverse-array.pipe'\nimport { DateHandlerService} from '../date-handler.service'\n\n@Component({\n  moduleId: __moduleName,\n  selector: 'my-comment',\n  templateUrl: 'my-comment.component.html',\n  styleUrls: ['my-comment.component.css'],\n  providers: [DateHandlerService],\n  pipes: [MyReverseArray]\n})\nexport class MyCommentComponent implements OnInit {\n  @Input()uid \n  comments: Comment[]\n  commentText =  \"\"\n  constructor(private dateHandlerService: DateHandlerService, @Inject(FirebaseRef) public ref:Firebase, public injector: Injector) {}\n  \n  ngOnInit() {\n  //  this._mcs.getComments().(r => this.comments = r);\n    this.ref.child('/events').child('/'+this.uid).child('/comments').on(\"value\", (v) => this.comments = v.val());\n  }\n  \n  commentsCount() {\n    if (this.comments != null || this.comments != undefined) {\n      return this.comments.length;\n    }\n    this.comments = [];\n    return 0;\n  }\n  \n  postComment() {\n    var text = this.commentText;\n    var date = this.dateHandlerService.getDate();\n    var time = this.dateHandlerService.getTime();\n    var comment : Comment = {\n        username: \"Anonym\",\n        time: time,\n        date: date,\n        text: text\n      };\n    if (this.isInputValid(text)) {\n      if(this.ref.getAuth()) {    \n        // Get the username of the logged in user.\n        this.ref.child('/users/' + this.ref.getAuth().uid).once('value', user => {\n          comment.username = user.val().username;\n          this.ref.child('/events').child('/'+this.uid).child('/comments/'+this.comments.length).update(comment);\n          this.commentText = \"\";\n          return false;\n        });\n      }\n      else {\n        if (text === '') {\n          console.log(\"String is empty\");\n          return false;\n        }\n        if (/^ +$/.test(text) === true) {\n          console.log(\"Whitespaces in text\");\n          return false;\n        }\n        this.ref.child('/events').child('/'+this.uid).child('/comments/'+this.comments.length).update(comment);\n        this.commentText = \"\";\n        return false;\n      }\n    }\n  }\n  //Returns true if text in commentfield is valid.\n  isInputValid(text: string) {\n      if (text === '') {\n        console.log(\"String is empty\");\n        return false;\n      }\n      if (/^ +$/.test(text) === true) {\n        console.log(\"Whitespaces in text\");\n        return false;\n      } \n      return true;\n  }\n}\n"]}