{"version":3,"file":"my-tile.component.js","sourceRoot":"","sources":["my-tile.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBAEE,yBAAmB,EAAe,EAA8B,GAAa;oBAA1D,OAAE,GAAF,EAAE,CAAa;oBAA8B,QAAG,GAAH,GAAG,CAAU;oBAE7E,UAAK,GAAc,EAAC,IAAI,EAAE,EAAE;wBAC5B,IAAI,EAAE,EAAE;wBACR,UAAU,EAAE,EAAE;wBACd,SAAS,EAAE,EAAE;wBACb,IAAI,EAAE,EAAE;wBACR,MAAM,EAAE,EAAE;wBACV,QAAQ,EAAE,CAAC,EAAE,CAAC;wBACd,KAAK,EAAE,EAAE;wBACT,SAAS,EAAE,EAAE;wBACb,KAAK,EAAE,EAAE;wBACT,KAAK,EAAE,EAAE;wBACT,GAAG,EAAE,IAAI;wBACT,QAAQ,EAAE,EAAE,EAAC,CAAA;gBAdmE,CAAC;gBAgBjF,kCAAQ,GAAR;oBAAA,iBAMC;oBAJE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,CAAC;wBACtD,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;oBACvB,CAAC,CAAC,CAAC;oBACJ,iDAAiD;gBACnD,CAAC;gBAED,sCAAY,GAAZ;oBACE;;;;;;;;;;;;;;;qBAeC;gBACH,CAAC;gBA1CD;oBAAC,YAAK,EAAG;;gEAAA;gBARX;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,SAAS;wBACnB,WAAW,EAAE,wBAAwB;wBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;wBACpC,SAAS,EAAE,EAAE;qBACd,CAAC;+BAGqC,aAAM,CAAC,0BAAW,CAAC;;mCAHxD;gBA6CF,sBAAC;YAAD,CAAC,AA5CD,IA4CC;YA5CD,6CA4CC,CAAA","sourcesContent":["import {Component, OnInit, Inject, Input} from 'angular2/core';\nimport {Event, FullEvent} from '../IEvent';\nimport {AngularFire, FirebaseListObservable, FirebaseRef} from 'angularfire2';\n\n@Component({\n  moduleId: __moduleName,\n  selector: 'my-tile',\n  templateUrl: 'my-tile.component.html',\n  styleUrls: ['my-tile.component.css'],\n  providers: []\n})\nexport class MyTileComponent implements OnInit {\n  @Input () eventId;\n  constructor(public af: AngularFire, @Inject(FirebaseRef) public ref: Firebase) {}\n  \n  event: FullEvent = {name: \"\",\n  date: \"\",\n  start_time: \"\",\n  stop_time: \"\",\n  info: \"\",\n  adress: \"\",\n  comments: [\"\"],\n  price: \"\",\n  organiser: \"\",\n  phone: \"\",\n  email: \"\", \n  uid: null,\n  imageURL: \"\"}\n\n  ngOnInit() {\n    \n     this.ref.child('/events/' + this.eventId).on(\"value\", (a) => {\n       this.event = a.val();\n     });\n    // this.event = this.af.database.list('/events');\n  }\n  \n  checkPicture() {\n    /*if(this.event.imageURL !== '' && this.event.imageURL !== undefined) {\n      console.log(this.event.imageURL)\n      this.event.imageURL = 'http://i.imgur.com/jq4D5B6.png';\n      var picRef = new Firebase('');\n      picRef.once('value', (snapshot) => {\n        return snapshot.val();\n      }, err => {\n        console.log(\"error...\" + err);\n        \n      });\n      return this.event.imageURL;\n    } else {\n      return this.event.imageURL;\n    }\n    \n   */\n  }\n}\n\n"]}